{"version":3,"sources":["components/utils/firebase.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","Todo","props","List","className","ListItem","ListItemText","primary","text","secondary","App","React","useState","todos","setTodos","input","setInput","console","log","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","todo","FormControl","InputLabel","Input","value","label","onChange","e","target","Button","variant","disabled","color","type","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iVAiBAA,IAASC,cAXc,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKjB,IACeC,EADJT,IAASU,Y,QCGLC,MAhBf,SAAcC,GAIZ,OACE,mCACA,cAACC,EAAA,EAAD,CAAMC,UAAU,WAAhB,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAcC,QAASL,EAAMM,KAAMC,UAAU,wBC4DtCC,MAlEf,WAAe,MAEaC,IAAMC,SAAS,IAF5B,mBAENC,EAFM,KAECC,EAFD,OAIaH,IAAMC,SAAS,IAJ5B,mBAING,EAJM,KAICC,EAJD,KAmCb,OA9BAC,QAAQC,IAAI,eAAOH,GACnBE,QAAQC,IAAI,eAAOnB,GAEnBoB,qBAAU,WAERpB,EAAGqB,WAAW,SAASC,QAAQ,YAAa,QAAQC,YAAW,SAACC,GAE9DT,EAASS,EAASC,KAAKC,KACrB,SAACC,GAAD,OAASA,EAAIC,OAAOC,cAIvB,IAmBD,sBAAKxB,UAAU,MAAf,UACE,2CAEA,iCACE,eAACyB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,sCACA,cAACC,EAAA,EAAD,CAAOC,MAAOjB,EAAOkB,MAAM,mBAAmBC,SATnC,SAACC,GAAD,OAAOnB,EAASmB,EAAEC,OAAOJ,aAatC,cAACK,EAAA,EAAD,CACEC,QAAQ,YACRC,UAAWxB,EACXyB,MAAM,UACNC,KAAK,SACLC,QA/BQ,SAACP,GAEfA,EAAEQ,iBAEF5C,EAAGqB,WAAW,SAASwB,IAAI,CACzBhB,KAAMb,EACN8B,UAAWvD,IAASU,UAAU8C,WAAWC,oBAG3CjC,EAAS,GAAD,mBAAKD,GAAL,CAAYE,KAEpBC,EAAS,KAeL,0BAWF,6BACGH,EAAMY,KAAI,SAACG,EAAMoB,GAAP,OACT,cAAC,EAAD,CAAkBxC,KAAMoB,GAAboB,YCtDNC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1d2399d4.chunk.js","sourcesContent":["\nimport \"firebase/firestore\";\nimport firebase from \"firebase/compat/app\"\nimport \"firebase/compat/auth\"\nimport \"firebase/compat/firestore\"\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDSFAXSdIBH2NVbE5zU3nnhgh7Woc8M7Xg\",\n  authDomain: \"todo-app-a60de.firebaseapp.com\",\n  projectId: \"todo-app-a60de\",\n  storageBucket: \"todo-app-a60de.appspot.com\",\n  messagingSenderId: \"578231052890\",\n  appId: \"1:578231052890:web:075190dc3e9fe6e7090663\",\n  measurementId: \"G-Y7KG0YYK51\",\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nexport default db;\n\n","import React from 'react'\nimport {List, ListItem, ListItemText, Button} from \"@material-ui/core\";\nimport './Todo.css'\nimport db from \"./components/utils/firebase\"\n\nfunction Todo(props) {\n\n\n\n  return (\n    <>\n    <List className=\"TodoList\">\n      <ListItem>\n        <ListItemText primary={props.text} secondary=\"ðŸ”²\" />\n      </ListItem>\n    </List>\n  \n    </>\n  )\n}\n\nexport default Todo\n","import React, { useEffect } from \"react\";\nimport { Button, Input, InputLabel, FormControl } from \"@material-ui/core\";\nimport \"./App.css\";\nimport Todo from \"./Todo\";\nimport db from \"./components/utils/firebase\";\nimport firebase from \"firebase/compat/app\"\n\nfunction App() {\n  //state for the todo list\n  const [todos, setTodos] = React.useState([]);\n  // state for the new todo item\n  const [input, setInput] = React.useState(\"\");\n  console.log(\"ðŸŸ¥\" + input);\n  console.log(\"ðŸŸ©\" + db);\n  //when the app loads it will listen to the database and fetch new todos and they get added/removed and we use   useEffect(() =>, dependencies)\n  useEffect(() => {\n    // code here runs when the app is loaded\n    db.collection(\"todos\").orderBy(\"timestamp\", \"desc\").onSnapshot((snapshot) => {\n\n      setTodos(snapshot.docs.map(\n        (doc) => doc.data().todo\n        \n        ));\n    })\n  }, []);\n\n  //adds the new list item to the list\n  const addTodo = (e) => {\n    //prevents page refresh when button is submited and deletes the state memory\n    e.preventDefault();\n\n    db.collection(\"todos\").add({\n      todo: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n\n    setTodos([...todos, input]);\n    //clears the input field\n    setInput(\"\");\n  };\n  const addNewTodo = (e) => setInput(e.target.value);\n\n  return (\n    <div className=\"App\">\n      <h1>ToDo List</h1>\n      {/* the form added to allow the button to submit when hit enter */}\n      <form>\n        <FormControl>\n          <InputLabel>ðŸ”³ Add a Todo</InputLabel>\n          <Input value={input} label=\"Outlined primary\" onChange={addNewTodo} />\n        </FormControl>\n\n        {/* disabled: disable adding null value */}\n        <Button\n          variant=\"contained\"\n          disabled={!input}\n          color=\"primary\"\n          type=\"submit\"\n          onClick={addTodo}\n        >\n          Add ToDos\n        </Button>\n      </form>\n\n      <ul>\n        {todos.map((todo, index) => (\n          <Todo key={index} text={todo} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport firebase from './components/utils/firebase';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}